rese
variable integer,anzahl
variable integer,gen
variable integer,psize
anzahl = 100
#
if('$1'.eq.'init') then
  sys rm -f found_pop
  sys rm -f final_pop
  sys rm -f decent_pop
  sys rm -f found_pop.rate
  sys rm -f final_pop.rate
  fopen 1,found_pop,append
  fopen 2,final_pop,append
  fopen 3,decent_pop,append
  fopen 4,found_pop.rate
  fopen 5,final_pop.rate
  fformat 1,f8.2
  fformat 2,f12.4
#
  fopen 6,POPULATION/pop_found.0000
  fopen 7,POPULATION/pop_final.0000
  fopen 8,POPULATION/pop_decent.0000
#
  do i[3]=0, 65, 5
#
    r[0] = 0
    i[1] = 0
    do i[0] = 1,anzahl
      fget 6,r[1],r[2]
      gen  = nint(r[1])
      psize = nint(r[2])
      if(gen .gt. 0) then
        r[0] = r[0] + gen
        i[1] = i[1] + 1
      endif
    enddo
    if(i[1].gt.0) then
      r[0] = r[0]/i[1]
    else
      r[0] =  0
    endif
    fput 1, psize ,r[0]
    fput 4, psize , i[1]*100./anzahl
#
    rese
    r[0] = 0
    i[1] = 0
    do i[0] = 1,anzahl
      fget 7,r[1],r[2]
      gen  = nint(r[1])
      psize = nint(r[2])
      if(gen .gt. 0) then
        r[0] = r[0] + gen
        i[1] = i[1] + 1
      endif
    enddo
    if(i[1].gt.0) then
      r[0] = r[0]/i[1]
    else
      r[0] =  0
    endif
    fput 2, psize ,r[0]
    fput 5, psize , i[1]*100./anzahl
#
    rese
    r[0] = 0
    i[1] = 0
    do i[0] = 1,anzahl
      fget 8,r[1],r[2]
      gen  = nint(r[1])
      psize = nint(r[2])
      if(gen .gt. 0) then
        r[0] = r[0] + gen
        i[1] = i[1] + 1
      endif
    enddo
    if(i[1].gt.0) then
      r[0] = r[0]/i[1]
    else
      r[0] =  0
    endif
    fput 3, psize ,r[0]
  enddo
  fclose all
endif
#
sys cat final_pop
sys cat decent_pop
sys cat found_pop.rate
sys cat final_pop.rate
#
rese
buff 0.08,0.08,0.12,0.08
#
load xy, found_pop
load xy, final_pop
load xy, decent_pop
load xy, found_pop.rate
load xy, final_pop.rate
ltyp 1,1
ltyp 2,1
ltyp 3,1
ltyp 4,1
ltyp 5,1
mtyp 1,3
mtyp 2,3
mtyp 3,3
mtyp 4,3
mtyp 5,3
lcol 1,3
lcol 2,1
lcol 3,2
lcol 4,4
lcol 5,6
mcol 1,3
mcol 2,1
mcol 3,2
mcol 4,4
mcol 5,6
skal 0,65,0,100.
mark 10.,10
grid on
fnam off
font size,1,18
font size,2,18
font size,3,18
font size,4,18
font size,5,18
font size,6,18
tit1
tit2 Performance as function of population size
achx population size
achy Generations/success rate
sann 1,found,40.0,53
sann 2,finished,40.0,75
sann 3,decent,40.0, 7
sann 4,found rate,31.0,90,l
sann 5,finish rate,22.0,90,r
#
plot
save ps,refine.pop.ps
sys ps2epsi refine.pop.ps
sys mv  refine.pop.epsi ../pic/refine.pop.eps
